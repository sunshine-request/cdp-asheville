name: Event Gather GitHub GPU

on:
  workflow_dispatch:
    inputs:
      from:
        description: "Optional ISO formatted string for datetime to begin event gather from."
        required: false
        default: ""  # Will get converted to N (default 2) days prior
      to:
        description: "Optional ISO formatted string for datetime to end event gather at."
        required: false
        default: ""  # Will get converted to now

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  process-events:
    runs-on: [sunshine-gpu]
    container:
      image: ghcr.io/iterative/cml:0-dvc2-base1-gpu
      options: --gpus all

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Check GPU Drivers
      run: |
        nvidia-smi

    - name: Install Packages
      run: |
        sudo apt update
        sudo apt-get install -y --no-install-recommends \
          libsndfile1 \
          ffmpeg

    - name: Install Python Dependencies
      run: |
        cd python/
        pip install --upgrade pip
        pip install .

    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: cdp-asheville-ektqmrjs
        service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
        export_default_credentials: true

    - name: Dump Credentials to JSON
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: "google-creds.json"
        json: ${{ secrets.GOOGLE_CREDENTIALS }}
        dir: "python/"

    - name: Gather and Process New Events - CRON
      if: ${{ github.event_name == 'schedule' }}
      run: |
        cd python/
        run_cdp_event_gather event-gather-config.json
    
    - name: Gather and Process Requested Events - Manual
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        cd python/
        run_cdp_event_gather event-gather-config.json \
          --from ${{ github.event.inputs.from }} \
          --to ${{ github.event.inputs.to }}
